steps:
  # Step 1: Install dependencies
  - name: 'node:16'
    entrypoint: 'npm'
    args: ['install']

  # Step 2: Fix permissions locally before copying
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Fixing local permissions..."
        chmod -R a+rX .

  # Step 3: Sync files to the VM using rsync (handles permissions better than scp)
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        apt-get update && apt-get install -y rsync
        echo "Syncing project files to VM using rsync..."
        rsync -avz -e "gcloud compute ssh --zone=us-east1-d --strict-host-key-checking=no ubuntu@vmcicdap --" ./ ubuntu@vmcicdap:/home/ubuntu/myapp

  # Step 4: Fix ownership and permissions on remote VM, then restart app with PM2
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Fixing remote permissions and restarting app with PM2..."
        gcloud compute ssh ubuntu@vmcicdap --zone=us-east1-d --command="
          sudo chown -R ubuntu:ubuntu /home/ubuntu/myapp &&
          sudo chmod -R 755 /home/ubuntu/myapp &&
          pm2 delete myapp || true &&
          cd /home/ubuntu/myapp &&
          pm2 start app.js --name myapp &&
          pm2 save
        "

timeout: '600s'

options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
















# steps:
#   # Step 1: Install dependencies
#   - name: 'node:16'
#     entrypoint: 'npm'
#     args: ['install']

#   # Step 2: Copy app files to the VM (supports hidden files)
#   - name: 'gcr.io/cloud-builders/gcloud'
#     entrypoint: 'bash'
#     args:
#       - '-c'
#       - |
#         shopt -s dotglob
#         gcloud compute scp --recurse ./* ubuntu@vmcicdap:/home/ubuntu/myapp --zone=us-east1-d

#   # Step 3: SSH into the VM, kill existing Node process, and restart the app
#   - name: 'gcr.io/cloud-builders/gcloud'
#     entrypoint: 'bash'
#     args:
#       - '-c'
#       - |
#         gcloud compute ssh ubuntu@vmcicdap --zone=us-east1-d --command="pkill node || true && cd /home/ubuntu/myapp && nohup node app.js > output.log 2>&1 &"

# timeout: '600s'

# options:
#   defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET



# steps:
#   # Install dependencies
#   - name: 'node:16'  # or your preferred node version
#     entrypoint: 'npm'
#     args: ['install']

#   # Run tests (optional)
#   - name: 'node:16'
#     entrypoint: 'npm'
#     args: ['test']

#   # Copy your app files to the VM
#   - name: 'gcr.io/cloud-builders/gcloud'
#     args:
#       - 'compute'
#       - 'scp'
#       - '--recurse'
#       - '.'
#       - 'ubuntu@YOUR_VM_EXTERNAL_IP:/home/ubuntu/myapp'

#   # SSH and restart Node app with pm2
#   - name: 'gcr.io/cloud-builders/gcloud'
#     entrypoint: 'bash'
#     args:
#       - '-c'
#       - |
#         gcloud compute ssh ubuntu@YOUR_VM_EXTERNAL_IP --command="cd /home/ubuntu/myapp && pm2 restart app.js || pm2 start app.js"

# timeout: 600s





# Reverse Proxy
 
# sudo nano /etc/apache2/sites-available/000-default.conf
 
# <VirtualHost *:80>
#     ServerAdmin webmaster@localhost
#     DocumentRoot /var/www/html
 
#     ProxyPreserveHost On
#     ProxyPass / http://localhost:3000/
#     ProxyPassReverse / http://localhost:3000/
 
#     ErrorLog ${APACHE_LOG_DIR}/error.log
#     CustomLog ${APACHE_LOG_DIR}/access.log combined
# </VirtualHost>

 
 
# sudo systemctl restart apache2
